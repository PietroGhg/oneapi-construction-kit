; Copyright (C) Codeplay Software Limited
;
; Licensed under the Apache License, Version 2.0 (the "License") with LLVM
; Exceptions; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     https://github.com/codeplaysoftware/oneapi-construction-kit/blob/main/LICENSE.txt
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
; WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
; License for the specific language governing permissions and limitations
; under the License.
;
; SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception

; RUN: %if online-spirv-as %{ spirv-as --target-env %spv_tgt_env -o %spv_file_s %s %}
; RUN: %if online-spirv-as %{ spirv-val %spv_file_s %}
; RUN: spirv-ll-tool -a OpenCL -b 64 %spv_file_s | FileCheck %s

; Tests imported and exported functions are not incorrectly re-named

               OpCapability Addresses
               OpCapability Linkage
               OpCapability Kernel
          %1 = OpExtInstImport "OpenCL.std"
               OpMemoryModel Physical64 OpenCL
               OpEntryPoint Kernel %18 "external_linkage"
               OpExecutionMode %18 ContractionOff
               OpSource OpenCL_C 102000
               OpName %imported_func "imported_func"
               OpName %x "x"
               OpName %entry "entry"
               OpName %func_1 "func_1"
               OpName %x_0 "x"
               OpName %entry_0 "entry"
               OpName %external_linkage "external_linkage"
               OpName %entry_1 "entry"
               OpDecorate %imported_func LinkageAttributes "imported_func" Import
               OpDecorate %func LinkageAttributes "func" Export
               OpDecorate %external_linkage LinkageAttributes "external_linkage" Export
       %uint = OpTypeInt 32 0
     %uint_1 = OpConstant %uint 1
       %void = OpTypeVoid
          %4 = OpTypeFunction %void %uint
         %13 = OpTypeFunction %void
%imported_func = OpFunction %void None %4
          %6 = OpFunctionParameter %uint
               OpFunctionEnd
       %func = OpFunction %void Pure %4
          %x = OpFunctionParameter %uint
      %entry = OpLabel
               OpReturn
               OpFunctionEnd
     %func_1 = OpFunction %void Pure %4
        %x_0 = OpFunctionParameter %uint
    %entry_0 = OpLabel
               OpReturn
               OpFunctionEnd
%external_linkage = OpFunction %void None %13
    %entry_1 = OpLabel
         %17 = OpFunctionCall %void %imported_func %uint_1
               OpReturn
               OpFunctionEnd
         %18 = OpFunction %void None %13
         %19 = OpLabel
         %20 = OpFunctionCall %void %external_linkage
               OpReturn
               OpFunctionEnd

; CHECK: declare spir_func void @imported_func{{([^)]+)}}
; CHECK: define spir_func void @func{{([^)]+)}}
; CHECK: define private spir_func void @func_1{{([^)]+)}}
; CHECK: define spir_func void @external_linkage.old{{([^)]+)}}
; CHECK: call spir_func void @imported_func{{([^)]+)}}
; CHECK: define spir_kernel void @external_linkage{{([^)]+)}}
; CHECK: call spir_func void @external_linkage.old{{([^)]+)}}
