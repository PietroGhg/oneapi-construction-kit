; Copyright (C) Codeplay Software Limited
;
; Licensed under the Apache License, Version 2.0 (the "License") with LLVM
; Exceptions; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     https://github.com/codeplaysoftware/oneapi-construction-kit/blob/main/LICENSE.txt
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
; WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
; License for the specific language governing permissions and limitations
; under the License.
;
; SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception

; RUN: %if online-spirv-as %{ spirv-as --target-env %spv_tgt_env -o %spv_file_s %s %}
; RUN: %if online-spirv-as %{ spirv-val %spv_file_s %}
; RUN: spirv-ll-tool -a OpenCL -b 64 %spv_file_s | FileCheck %s
                        OpCapability Kernel
                        OpCapability Addresses
                   %1 = OpExtInstImport "OpenCL.std"
                        OpMemoryModel Physical64 OpenCL
                        OpEntryPoint Kernel %remquo_float_uint "remquo_float_uint"
                        OpSource OpenCL_C 102000
                        OpName %in_quo_uint "in_quo"

; All types, variables and constants
              %void_t = OpTypeVoid
              %uint_t = OpTypeInt 32 0
             %float_t = OpTypeFloat 32
          %uint_ptr_t = OpTypePointer CrossWorkgroup %uint_t
    %remquo_uint_fn_t = OpTypeFunction %void_t %uint_ptr_t
             %float_1 = OpConstant %float_t 1.5
             %float_2 = OpConstant %float_t 2.0

   %remquo_float_uint = OpFunction %void_t None %remquo_uint_fn_t
         %in_quo_uint = OpFunctionParameter %uint_ptr_t
; CHECK: define spir_kernel void @remquo_float_uint(ptr addrspace(1) %in_quo)
                   %4 = OpLabel
                   %5 = OpExtInst %float_t %1 remquo %float_2 %float_1 %in_quo_uint
; CHECK: = call spir_func float @_Z6remquoffPU3AS1i(float 2.000000e+00, float 1.500000e+00, ptr addrspace(1) %in_quo)
                        OpReturn
; CHECK: ret void
                        OpFunctionEnd
; CHECK: }
