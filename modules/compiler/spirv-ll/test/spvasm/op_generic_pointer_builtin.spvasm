; Copyright (C) Codeplay Software Limited
;
; Licensed under the Apache License, Version 2.0 (the "License") with LLVM
; Exceptions; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     https://github.com/codeplaysoftware/oneapi-construction-kit/blob/main/LICENSE.txt
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
; WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
; License for the specific language governing permissions and limitations
; under the License.
;
; SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception

; RUN: %if online-spirv-as %{ spirv-as --target-env %spv_tgt_env -o %spv_file_s %s %}
; RUN: %if online-spirv-as %{ spirv-val %spv_file_s %}
; RUN: spirv-ll-tool -a OpenCL -b 64 -c GenericPointer %spv_file_s | FileCheck %s

               OpCapability Addresses
               OpCapability Linkage
               OpCapability Kernel
               OpCapability Int64
               OpCapability GenericPointer
               OpMemoryModel Physical64 OpenCL
               OpEntryPoint Kernel %20 "entry_pt"

               OpName %__spirv_BuiltInGlobalInvocationId "__spirv_BuiltInGlobalInvocationId"
               OpDecorate %__spirv_BuiltInGlobalInvocationId LinkageAttributes "__spirv_BuiltInGlobalInvocationId" Import
               OpDecorate %__spirv_BuiltInGlobalInvocationId Constant
               OpDecorate %__spirv_BuiltInGlobalInvocationId BuiltIn GlobalInvocationId
               OpDecorate %__spirv_BuiltInGlobalInvocationId Alignment 32
       %void = OpTypeVoid
      %ulong = OpTypeInt 64 0
    %v3ulong = OpTypeVector %ulong 3
        %_ptr_Generic_v3ulong = OpTypePointer Generic %v3ulong
 %_ptr_CrossWorkgroup_v3ulong = OpTypePointer CrossWorkgroup %v3ulong
%__spirv_BuiltInGlobalInvocationId = OpVariable %_ptr_CrossWorkgroup_v3ulong CrossWorkgroup

         %19 = OpTypeFunction %void
         %20 = OpFunction %void None %19
      %entry = OpLabel

; Check that multiple uses of a BuiltIn cast to a generic pointer don't crash
; the translator.
; CHECK: [[T0:%.*]] = trunc i64 0 to i32
; CHECK: [[ID0:%.*]] = call spir_func i64 @_Z13get_global_idj(i32 [[T0]])
         %51 = OpPtrCastToGeneric %_ptr_Generic_v3ulong %__spirv_BuiltInGlobalInvocationId
         %52 = OpLoad %v3ulong %51 Aligned 32
         %53 = OpCompositeExtract %ulong %52 0

; CHECK: [[T1:%.*]] = trunc i64 0 to i32
; CHECK: [[ID1:%.*]] = call spir_func i64 @_Z13get_global_idj(i32 [[T1]])
        %114 = OpPtrCastToGeneric %_ptr_Generic_v3ulong %__spirv_BuiltInGlobalInvocationId
        %115 = OpLoad %v3ulong %114 Aligned 32
        %116 = OpCompositeExtract %ulong %115 0

               OpReturn
               OpFunctionEnd
