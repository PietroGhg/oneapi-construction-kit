; Copyright (C) Codeplay Software Limited
;
; Licensed under the Apache License, Version 2.0 (the "License") with LLVM
; Exceptions; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     https://github.com/codeplaysoftware/oneapi-construction-kit/blob/main/LICENSE.txt
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
; WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
; License for the specific language governing permissions and limitations
; under the License.
;
; SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception

; Copyright (C) Codeplay Software Limited
;
; Licensed under the Apache License, Version 2.0 (the "License") with LLVM
; Exceptions; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     https://github.com/codeplaysoftware/oneapi-construction-kit/blob/main/LICENSE.txt
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
; WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
; License for the specific language governing permissions and limitations
; under the License.
;
; SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception

; RUN: %if online-spirv-as %{ spirv-as --target-env %spv_tgt_env -o %spv_file_s %s %}
; RUN: %if online-spirv-as %{ spirv-val %spv_file_s %}
; RUN: spirv-ll-tool -a OpenCL -b 64 %spv_file_s | FileCheck %s

                  OpCapability Kernel
                  OpCapability Addresses
             %1 = OpExtInstImport "OpenCL.std"
                  OpMemoryModel Physical64 OpenCL
                  OpEntryPoint Kernel %foo "metadata"
                  OpExecutionMode %foo VecTypeHint 524293
; 524293 represents 8 in the upper 16 bits and 5 in the lower 16 bits
; 5 is 32-bit float data type
; 8 is the number of vector elements
                  OpSource OpenCL_C 102000
        %void_t = OpTypeVoid
         %foo_t = OpTypeFunction %void_t
           %foo = OpFunction %void_t None %foo_t
; CHECK: !vec_type_hint [[MD:![0-9]+]]
             %2 = OpLabel
                  OpReturn
                  OpFunctionEnd
; CHECK: [[MD]] = !{<8 x float> undef, i32 0}
