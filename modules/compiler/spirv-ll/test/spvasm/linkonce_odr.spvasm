; Copyright (C) Codeplay Software Limited
;
; Licensed under the Apache License, Version 2.0 (the "License") with LLVM
; Exceptions; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     https://github.com/codeplaysoftware/oneapi-construction-kit/blob/main/LICENSE.txt
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
; WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
; License for the specific language governing permissions and limitations
; under the License.
;
; SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception

; RUN: %if online-spirv-as %{ spirv-as --target-env %spv_tgt_env -o %spv_file_s %s %}
; RUN: %if online-spirv-as %{ spirv-val %spv_file_s %}
; RUN: spirv-ll-tool -a OpenCL -b 64 %spv_file_s -e SPV_KHR_linkonce_odr | FileCheck %s

               OpCapability Addresses
               OpCapability Linkage
               OpCapability Kernel
               OpExtension "SPV_KHR_linkonce_odr"
          %1 = OpExtInstImport "OpenCL.std"
               OpMemoryModel Physical64 OpenCL
               OpSource OpenCL_C 102000

               OpName %gv "gv"
               OpName %foo "foo"
               OpName %bar "bar"
               OpName %y "y"

               OpDecorate %gv LinkageAttributes "gv" LinkOnceODR
               OpDecorate %foo LinkageAttributes "foo" Import
               OpDecorate %bar LinkageAttributes "bar" LinkOnceODR

       %void = OpTypeVoid
       %uint = OpTypeInt 32 0

  %uint_zero = OpConstant %uint 0

    %func_ty = OpTypeFunction %void %uint

      %gv_ty = OpTypePointer CrossWorkgroup %uint

; CHECK: @gv = linkonce_odr addrspace(1) global i32 0
         %gv = OpVariable %gv_ty CrossWorkgroup %uint_zero

; CHECK: declare spir_func void @foo(i32)
        %foo = OpFunction %void None %func_ty
          %x = OpFunctionParameter %uint
               OpFunctionEnd

; CHECK: define linkonce_odr spir_func void @bar(i32 %y)
       %bar  = OpFunction %void None %func_ty
          %y = OpFunctionParameter %uint
          %0 = OpLabel
          %c = OpFunctionCall %void %foo %y
               OpReturn
               OpFunctionEnd
