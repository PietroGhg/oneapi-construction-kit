; Copyright (C) Codeplay Software Limited
;
; Licensed under the Apache License, Version 2.0 (the "License") with LLVM
; Exceptions; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     https://github.com/codeplaysoftware/oneapi-construction-kit/blob/main/LICENSE.txt
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
; WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
; License for the specific language governing permissions and limitations
; under the License.
;
; SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception

; RUN: %if online-spirv-as %{ spirv-as --target-env %spv_tgt_env -o %spv_file_s %s %}
; RUN: %if online-spirv-as %{ spirv-val %spv_file_s %}
; RUN: spirv-ll-tool -a OpenCL -b 64 %spv_file_s | FileCheck %s
                        OpCapability Kernel
                        OpCapability Addresses
                   %1 = OpExtInstImport "OpenCL.std"
                        OpMemoryModel Physical64 OpenCL
                        OpEntryPoint Kernel %pown_v2float "pown_v2float"
                        OpSource OpenCL_C 102000

; All types, variables and constants
              %void_t = OpTypeVoid
               %int_t = OpTypeInt 32 0
             %float_t = OpTypeFloat 32
             %v2int_t = OpTypeVector %int_t 2
           %v2float_t = OpTypeVector %float_t 2
           %pown_fn_t = OpTypeFunction %void_t
               %int_2 = OpConstant %int_t 2
             %float_2 = OpConstant %float_t 2.2
             %v2int_2 = OpConstantComposite %v2int_t %int_2 %int_2
           %v2float_2 = OpConstantComposite %v2float_t %float_2 %float_2

; All functions
        %pown_v2float = OpFunction %void_t None %pown_fn_t
; CHECK: define spir_kernel void @pown_v2float()
                   %2 = OpLabel
                   %3 = OpExtInst %v2float_t %1 pown %v2float_2 %v2int_2
; CHECK: = call spir_func <2 x float> @_Z4pownDv2_fDv2_i(<2 x float> <float 0x40019999A0000000, float 0x40019999A0000000>, <2 x i32> <i32 2, i32 2>)
                        OpReturn
; CHECK: ret void
                        OpFunctionEnd
; CHECK: }
