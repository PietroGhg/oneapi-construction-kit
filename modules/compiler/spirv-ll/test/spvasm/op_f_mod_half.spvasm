; Copyright (C) Codeplay Software Limited
;
; Licensed under the Apache License, Version 2.0 (the "License") with LLVM
; Exceptions; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     https://github.com/codeplaysoftware/oneapi-construction-kit/blob/main/LICENSE.txt
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
; WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
; License for the specific language governing permissions and limitations
; under the License.
;
; SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception

; RUN: %if online-spirv-as %{ spirv-as --target-env %spv_tgt_env -o %spv_file_s %s %}
; RUN: %if online-spirv-as %{ spirv-val %spv_file_s %}
; RUN: spirv-ll-tool -a OpenCL -b 64 -E %spv_file_s | FileCheck %s
               OpCapability Kernel
               OpCapability Float16
               OpCapability Int64
               OpCapability Addresses
          %1 = OpExtInstImport "OpenCL.std"
               OpMemoryModel Physical64 OpenCL
               OpEntryPoint Kernel %main "main"
               OpSource GLSL 450
               OpName %main "main"
               OpName %a "a"
               OpName %b "b"
               OpName %res "res"
       %void = OpTypeVoid
          %3 = OpTypeFunction %void
       %half = OpTypeFloat 16
  %ptr_float = OpTypePointer Function %half
          %9 = OpConstant %half 42.42
         %11 = OpConstant %half 42.42
       %main = OpFunction %void None %3
          %5 = OpLabel
          %a = OpVariable %ptr_float Function
          %b = OpVariable %ptr_float Function
        %res = OpVariable %ptr_float Function
               OpStore %a %9
               OpStore %b %11
         %13 = OpLoad %half %a
         %14 = OpLoad %half %b
         %15 = OpFMod %half %13 %14 ; testing this
               OpStore %res %15
               OpReturn
               OpFunctionEnd
; CHECK: ; ModuleID = '{{.*}}'
; CHECK: = alloca half
; CHECK: = alloca half
; CHECK: = alloca half
; CHECK: store half 0xH514D, ptr {{[%@].*}}
; CHECK: store half 0xH514D, ptr {{[%@].*}}
; CHECK: [[a:%.*]] = load half, ptr %a
; CHECK: [[b:%.*]] = load half, ptr %b
; CHECK: [[mod:%.*]] = call spir_func half @_Z4fmodDhDh(half [[a]], half [[b]])
; CHECK: [[copy:%.*]] = call spir_func half @_Z8copysignDhDh(half [[mod]], half [[b]])
; CHECK: store half [[copy]], ptr {{[%@].*}}
; CHECK: ret void
