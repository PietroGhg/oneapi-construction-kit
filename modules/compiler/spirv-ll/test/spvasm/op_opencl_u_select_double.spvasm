; Copyright (C) Codeplay Software Limited
;
; Licensed under the Apache License, Version 2.0 (the "License") with LLVM
; Exceptions; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     https://github.com/codeplaysoftware/oneapi-construction-kit/blob/main/LICENSE.txt
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
; WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
; License for the specific language governing permissions and limitations
; under the License.
;
; SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception

; RUN: %if online-spirv-as %{ spirv-as --target-env %spv_tgt_env -o %spv_file_s %s %}
; RUN: %if online-spirv-as %{ spirv-val %spv_file_s %}
; RUN: spirv-ll-tool -a OpenCL -b 64 -c Float64 %spv_file_s | FileCheck %s
                        OpCapability Kernel
                        OpCapability Addresses
                        OpCapability Int64
                        OpCapability Float64
                   %1 = OpExtInstImport "OpenCL.std"
                        OpMemoryModel Physical64 OpenCL
                        OpEntryPoint Kernel %select_double "select_double"
                        OpSource OpenCL_C 102000

; All types, variables and constants
              %void_t = OpTypeVoid
              %ui64_t = OpTypeInt 64 0
            %double_t = OpTypeFloat 64
         %select_fn_t = OpTypeFunction %void_t
            %double_1 = OpConstant %double_t 1.0
            %double_2 = OpConstant %double_t 2.0
              %ui64_3 = OpConstant %ui64_t 3

; All functions
       %select_double = OpFunction %void_t None %select_fn_t
; CHECK: define spir_kernel void @select_double()
                   %2 = OpLabel
                   %3 = OpExtInst %double_t %1 select %double_1 %double_2 %ui64_3
; CHECK: = call spir_func double @_Z6selectddm(double 1.000000e+00, double 2.000000e+00, i64 3)
                        OpReturn
; CHECK: ret void
                        OpFunctionEnd
; CHECK: }
