; Copyright (C) Codeplay Software Limited
;
; Licensed under the Apache License, Version 2.0 (the "License") with LLVM
; Exceptions; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     https://github.com/codeplaysoftware/oneapi-construction-kit/blob/main/LICENSE.txt
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
; WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
; License for the specific language governing permissions and limitations
; under the License.
;
; SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception

; RUN: %if online-spirv-as %{ spirv-as --target-env %spv_tgt_env -o %spv_file_s %s %}
; RUN: %if online-spirv-as %{ spirv-val %spv_file_s %}
; RUN: spirv-ll-tool -a OpenCL -b 64 %spv_file_s | FileCheck %s
                        OpCapability Kernel
                        OpCapability Addresses
                        OpCapability Int64
                        OpCapability Vector16
                   %1 = OpExtInstImport "OpenCL.std"
                        OpMemoryModel Physical64 OpenCL
                        OpEntryPoint Kernel %u_sub_sat_v8i64 "u_sub_sat_v8i64"
                        OpSource OpenCL_C 102000

; All types, variables and constants
              %void_t = OpTypeVoid
               %i64_t = OpTypeInt 64 0
             %v8i64_t = OpTypeVector %i64_t 8
      %u_sub_sat_fn_t = OpTypeFunction %void_t
               %i64_3 = OpConstant %i64_t 3
               %i64_4 = OpConstant %i64_t 4
             %v8i64_3 = OpConstantComposite %v8i64_t %i64_3 %i64_3 %i64_3 %i64_3 %i64_3 %i64_3 %i64_3 %i64_3
             %v8i64_4 = OpConstantComposite %v8i64_t %i64_4 %i64_4 %i64_4 %i64_4 %i64_4 %i64_4 %i64_4 %i64_4

; All functions
     %u_sub_sat_v8i64 = OpFunction %void_t None %u_sub_sat_fn_t
; CHECK: define spir_kernel void @u_sub_sat_v8i64()
                   %2 = OpLabel
                   %3 = OpExtInst %v8i64_t %1 u_sub_sat %v8i64_3 %v8i64_4
; CHECK: = call spir_func <8 x i64> @_Z7sub_satDv8_mS_(<8 x i64> <i64 3, i64 3, i64 3, i64 3, i64 3, i64 3, i64 3, i64 3>, <8 x i64> <i64 4, i64 4, i64 4, i64 4, i64 4, i64 4, i64 4, i64 4>)
                        OpReturn
; CHECK: ret void
                        OpFunctionEnd
; CHECK: }
