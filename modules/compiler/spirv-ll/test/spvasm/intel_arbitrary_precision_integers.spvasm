; Copyright (C) Codeplay Software Limited
;
; Licensed under the Apache License, Version 2.0 (the "License") with LLVM
; Exceptions; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     https://github.com/codeplaysoftware/oneapi-construction-kit/blob/main/LICENSE.txt
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
; WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
; License for the specific language governing permissions and limitations
; under the License.
;
; SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception

; RUN: %if online-spirv-as %{ spirv-as --target-env %spv_tgt_env -o %spv_file_s %s %}
; RUN: spirv-ll-tool -a OpenCL -b 64 %spv_file_s -e SPV_INTEL_arbitrary_precision_integers -c ArbitraryPrecisionIntegersINTEL | FileCheck %s

            OpCapability Kernel
            OpCapability Addresses
            OpCapability ArbitraryPrecisionIntegersINTEL
            OpExtension "SPV_INTEL_arbitrary_precision_integers"
            OpMemoryModel Physical64 OpenCL
            OpEntryPoint Kernel %kernel "kernel"
            OpName %kernel "kernel"
            OpName %a "a"
            OpName %x "x"
            OpName %p "p"
            OpName %l "l"
            OpName %y "y"
    %void = OpTypeVoid
     %u40 = OpTypeInt 40 0
 %ptr_u40 = OpTypePointer Function %u40

       %3 = OpTypeFunction %void %u40 %ptr_u40

; CHECK: define spir_kernel void @kernel(i40 %x, {{(ptr|i40\*)}} %p)
  %kernel = OpFunction %void None %3
       %x = OpFunctionParameter %u40
       %p = OpFunctionParameter %ptr_u40

       %4 = OpLabel
; CHECK: %a = alloca i40, align 8
       %a = OpVariable %ptr_u40 Function
; CHECK: store i40 %x, {{(ptr|i40\*)}} %a, align 8
            OpStore %a %x
; OpName doesn't do anything here...
; CHECK: [[L:%.*]] = load i40, {{(ptr|i40\*)}} %a, align 8
       %l = OpLoad %u40 %a
; ... nor here
; CHECK: [[Y:%.*]] = add i40 [[L]], %x
       %y = OpIAdd %u40 %l %x
; CHECK: store i40 [[Y]], {{(ptr|i40\*)}} %p, align 8
            OpStore %p %y
            OpReturn
            OpFunctionEnd

; CHECK: !{!"uint40_t", !"uint40_t*"}
