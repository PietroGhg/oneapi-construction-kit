; Copyright (C) Codeplay Software Limited
;
; Licensed under the Apache License, Version 2.0 (the "License") with LLVM
; Exceptions; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     https://github.com/codeplaysoftware/oneapi-construction-kit/blob/main/LICENSE.txt
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
; WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
; License for the specific language governing permissions and limitations
; under the License.
;
; SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception

; RUN: %if online-spirv-as %{ spirv-as --target-env %spv_tgt_env -o %spv_file_s %s %}
; RUN: %if online-spirv-as %{ spirv-val %spv_file_s %}
; RUN: spirv-ll-tool -a OpenCL -b 64 %spv_file_s | FileCheck %s
                        OpCapability Kernel
                        OpCapability Addresses
                        OpCapability Vector16
                   %1 = OpExtInstImport "OpenCL.std"
                        OpMemoryModel Physical64 OpenCL
                        OpEntryPoint Kernel %frexp_v8float "frexp_v8float"
                        OpSource OpenCL_C 102000

; All types, variables and constants
              %void_t = OpTypeVoid
               %int_t = OpTypeInt 32 0
             %float_t = OpTypeFloat 32
             %v8int_t = OpTypeVector %int_t 8
           %v8float_t = OpTypeVector %float_t 8
         %v8int_ptr_t = OpTypePointer Function %v8int_t
          %frexp_fn_t = OpTypeFunction %void_t
             %float_1 = OpConstant %float_t 1.4
           %v8float_1 = OpConstantComposite %v8float_t %float_1 %float_1 %float_1 %float_1 %float_1 %float_1 %float_1 %float_1

; All functions
       %frexp_v8float = OpFunction %void_t None %frexp_fn_t
; CHECK: define spir_kernel void @frexp_v8float()
                   %2 = OpLabel
                   %3 = OpVariable %v8int_ptr_t Function
; CHECK: [[ptr:%.*]] = alloca <8 x i32>
                   %4 = OpExtInst %v8float_t %1 frexp %v8float_1 %3
; CHECK: = call spir_func <8 x float> @_Z5frexpDv8_fPDv8_i(<8 x float> <float 0x3FF6666660000000, float 0x3FF6666660000000, float 0x3FF6666660000000, float 0x3FF6666660000000, float 0x3FF6666660000000, float 0x3FF6666660000000, float 0x3FF6666660000000, float 0x3FF6666660000000>, ptr [[ptr]])
                        OpReturn
; CHECK: ret void
                        OpFunctionEnd
; CHECK: }
