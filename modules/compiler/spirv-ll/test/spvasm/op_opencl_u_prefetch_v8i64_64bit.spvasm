; Copyright (C) Codeplay Software Limited
;
; Licensed under the Apache License, Version 2.0 (the "License") with LLVM
; Exceptions; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     https://github.com/codeplaysoftware/oneapi-construction-kit/blob/main/LICENSE.txt
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
; WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
; License for the specific language governing permissions and limitations
; under the License.
;
; SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception

; RUN: %if online-spirv-as %{ spirv-as --target-env %spv_tgt_env -o %spv_file_s %s %}
; RUN: %if online-spirv-as %{ spirv-val %spv_file_s %}
; RUN: spirv-ll-tool -a OpenCL -b 64 %spv_file_s | FileCheck %s
                        OpCapability Kernel
                        OpCapability Addresses
                        OpCapability Vector16
                        OpCapability Int64
                   %1 = OpExtInstImport "OpenCL.std"
                        OpMemoryModel Physical64 OpenCL
                        OpEntryPoint Kernel %u_prefetch_v8i64 "u_prefetch_v8i64"
                        OpSource OpenCL_C 102000
                        OpName %in_ptr "in_ptr"

; All types, variables and constants
              %void_t = OpTypeVoid
               %i64_t = OpTypeInt 64 0
             %v8i64_t = OpTypeVector %i64_t 8
         %v8i64_ptr_t = OpTypePointer CrossWorkgroup %v8i64_t
     %u_prefetch_fn_t = OpTypeFunction %void_t %v8i64_ptr_t
               %i64_1 = OpConstant %i64_t 2

; All functions
    %u_prefetch_v8i64 = OpFunction %void_t None %u_prefetch_fn_t
              %in_ptr = OpFunctionParameter %v8i64_ptr_t
; CHECK: define spir_kernel void @u_prefetch_v8i64(ptr addrspace(1) %in_ptr)
                   %2 = OpLabel
                   %3 = OpExtInst %void_t %1 prefetch %in_ptr %i64_1
; CHECK: call spir_func void @_Z8prefetchPU3AS1KDv8_mm(ptr addrspace(1) %in_ptr, i64 2)
                        OpReturn
; CHECK: ret void
                        OpFunctionEnd
; CHECK: }
