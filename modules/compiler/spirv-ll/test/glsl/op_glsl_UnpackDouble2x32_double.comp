// Copyright (C) Codeplay Software Limited
//
// Licensed under the Apache License, Version 2.0 (the "License") with LLVM
// Exceptions; you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://github.com/codeplaysoftware/oneapi-construction-kit/blob/main/LICENSE.txt
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
// WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
// License for the specific language governing permissions and limitations
// under the License.
//
// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception

// RUN: %if online-glsl %{ glslangValidator -s -V -o %spv_file_s %s %}
// RUN: %if online-glsl %{ spirv-val %spv_file_s %}
// RUN: spirv-ll-tool -a Vulkan -c Float64 -c Float64 %spv_file_s | FileCheck %s

#version 450

layout (std430, set=0, binding=0) buffer inA {
  double arg0;
};

layout (std430, set=0, binding=1) buffer outR {
  uvec2 res;
};

void main() {
  res = unpackDouble2x32(arg0);
}

// CHECK: ; ModuleID = '{{.*}}'

// CHECK: define spir_kernel void @main(ptr addrspace(1){{( %0)?}}, ptr addrspace(1){{( %1)?}}, ptr addrspace(1){{( %2)?}}) #0 {
// CHECK:   [[bufferArg0:%.*]] = getelementptr [[inA:%.*]], ptr addrspace(1) {{%.*}}, i32 0, i32 0
// CHECK:   [[arg0:%.*]] = load double, ptr addrspace(1) [[bufferArg0]]
// CHECK:   [[cast:%.*]] = bitcast double [[arg0]] to <2 x i32>
// CHECK:   [[res:%.*]] = getelementptr [[outR:%.*]], ptr addrspace(1) {{%.*}}, i32 0, i32 0
// CHECK:   store <2 x i32> [[cast]], ptr addrspace(1) [[res]]
// CHECK:   ret void
// CHECK: }
