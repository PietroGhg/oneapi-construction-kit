// Copyright (C) Codeplay Software Limited
//
// Licensed under the Apache License, Version 2.0 (the "License") with LLVM
// Exceptions; you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://github.com/codeplaysoftware/oneapi-construction-kit/blob/main/LICENSE.txt
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
// WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
// License for the specific language governing permissions and limitations
// under the License.
//
// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception

// RUN: %if online-glsl %{ glslangValidator -s -V -o %spv_file_s %s %}
// RUN: %if online-glsl %{ spirv-val %spv_file_s %}
// RUN: spirv-ll-tool -a Vulkan %spv_file_s | FileCheck %s

// CHECK: ; ModuleID = '{{.*}}'
#version 450

layout (std430, set=0, binding=0) buffer inA {
  uint arg0;
};

layout (std430, set=0, binding=1) buffer outR {
  vec4 res;
};

void main() {
// define spir_kernel void @main([[inA:%.*]] addrspace(1)*{{( %0)?}}, [[outR:%.*]] addrspace(1)*{{( %1)?}}, ptr addrspace(1){{( %2)?}}) {
//   [[arg0:%.*]] = getelementptr [[inA]], [[inA]] addrspace(1)* [[inA]], i32 0, i32 0
//   [[arg0value:%.*]] = load i32, ptr addrspace(1) [[arg0]]
  res = unpackUnorm4x8(arg0);
//   [[call:%.*]] = call spir_func <4 x float> @_Z14unpackUnorm4x8j(i32 [[arg0value]])
//   [[res:%.*]] = getelementptr [[outR]], [[outR]] addrspace(1)* [[outR]], i32 0, i32 0
//   store <4 x float> [[call]], <4 x float> addrspace(1)* [[res]]
//   ret void
}
// }
