// Copyright (C) Codeplay Software Limited
//
// Licensed under the Apache License, Version 2.0 (the "License") with LLVM
// Exceptions; you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://github.com/codeplaysoftware/oneapi-construction-kit/blob/main/LICENSE.txt
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
// WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
// License for the specific language governing permissions and limitations
// under the License.
//
// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception

// RUN: %if online-glsl %{ glslangValidator -s -V -o %spv_file_s %s %}
// RUN: %if online-glsl %{ spirv-val %spv_file_s %}
// RUN: spirv-ll-tool -a Vulkan %spv_file_s | FileCheck %s

#version 450

void main() {
  bvec2 vec = bvec2(true, true);
  bool result = any(vec);
}

// CHECK: ; ModuleID = '{{.*}}'

// CHECK: define spir_kernel void @main() #0 {
// CHECK: %vec = alloca <2 x i1>
// CHECK: %result = alloca i1
// CHECK: store <2 x i1> <i1 true, i1 true>, ptr %vec
// CHECK: [[load:%.*]] = load <2 x i1>, ptr %vec
// CHECK: [[sext:%.*]] = sext <2 x i1> [[load]] to <2 x i32>
// CHECK: [[call:%.*]] = call spir_func i32 @_Z3anyDv2_i(<2 x i32> [[sext]])
// CHECK: [[trunc:%.*]] = trunc i32 [[call]] to i1
// CHECK: store i1 [[trunc]], ptr %result
// CHECK: ret void
// CHECK: }

// CHECK: declare spir_func i32 @_Z3anyDv2_i(<2 x i32>)
