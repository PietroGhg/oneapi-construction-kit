// Copyright (C) Codeplay Software Limited
//
// Licensed under the Apache License, Version 2.0 (the "License") with LLVM
// Exceptions; you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://github.com/codeplaysoftware/oneapi-construction-kit/blob/main/LICENSE.txt
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
// WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
// License for the specific language governing permissions and limitations
// under the License.
//
// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception

// RUN: %if online-glsl %{ glslangValidator -s -V -o %spv_file_s %s %}
// RUN: %if online-glsl %{ spirv-val %spv_file_s %}
// RUN: spirv-ll-tool -a Vulkan %spv_file_s | FileCheck %s

#version 450

bool foo(int a, int b){ 
  return a == b;
}

void main() {
  bool res = foo(-42, -42);
}

// CHECK: ; ModuleID = '{{.*}}'
// CHECK: define spir_kernel void @main() #0 {
// CHECK: [[res:%.*]] = alloca i1
// CHECK: [[param:%.*]] = alloca i32
// CHECK: [[param1:%.*]] = alloca i32
// CHECK: store i32 -42, ptr [[param]]
// CHECK: store i32 -42, ptr [[param1]]
// CHECK: [[call:%.*]] = call spir_func i1 @{{(foo|"foo\(.+")}}(ptr [[param]], ptr [[param1]])
// CHECK: store i1 [[call]], ptr [[res]]
// CHECK: ret void
// CHECK: }

// CHECK: define private spir_func i1 @{{(foo|"foo\(.+")}}(ptr %a, ptr %b) #0 {
// CHECK: [[a:%.*]] = load i32, ptr %a
// CHECK: [[b:%.*]] = load i32, ptr %b
// CHECK: [[ret:%.*]] = icmp eq i32 [[a]], [[b]]
// CHECK: ret i1 [[ret]]
// CHECK: }
